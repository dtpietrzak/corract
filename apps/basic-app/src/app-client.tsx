/**
 * NOTE: This file is auto-generated by Corract!
 * If you modify it, your changes will be lost on the next dev / build.
 *
 * - App Entry Point -
 *
 * This is the entry point for a Preact application.
 *
 * The current plan is to allow drivers to be set up to use this framework
 * with different ui libraries, routing libraries, state management, etc.
 */

import type { ClientProps } from 'corract'
import { render } from 'preact'
import { Router, Route } from 'preact-router'
import { ServerStateProvider } from 'corract'

import { routes } from './app-def'

import Page_ from './pages/'
import Page_profile from './pages/profile'
import Page_profile__id from './pages/profile/(id)'
import Page_profile_demo from './pages/profile/demo'
import Navbar from './layouts/Navbar'
import Profile from './layouts/Profile'

let ssrRoutePath: string | undefined
const pathHandler = <T extends keyof typeof routes>(routePath: T) => {
  if (ssrRoutePath) {
    if (ssrRoutePath === routePath) {
      return '/' as typeof routePath
    } else {
      return '/404' as unknown as typeof routePath
    }
  } else {
    return routePath
  }
}

export function Client(props?: ClientProps) {
  ssrRoutePath = props?.routePath as string | undefined
  return (
    <ServerStateProvider
      middlewareData={props?.middlewareData}
    >
      <Router>
        <Route routes={routes} route={routes['/']} path={pathHandler('/')} component={_Navbar}/>
        <Route routes={routes} route={routes['/profile']} path={pathHandler('/profile')} component={_Navbar}/>
        <Route routes={routes} route={routes['/profile/:id']} path={pathHandler('/profile/:id')} component={_Profile}/>
        <Route routes={routes} route={routes['/profile/demo']} path={pathHandler('/profile/demo')} component={Page_profile_demo}/>
      </Router>
    </ServerStateProvider>
  )
}

function _Navbar() {
  return (
    <Navbar>
      <Router>
        <Route routes={routes} route={routes['/']} path={pathHandler('/')} component={Page_}/>
        <Route routes={routes} route={routes['/profile']} path={pathHandler('/profile')} component={_Navbar_Profile}/>
      </Router>
    </Navbar>
  )
}

function _Profile() {
  return (
    <Profile>
      <Router>
        <Route routes={routes} route={routes['/profile/:id']} path={pathHandler('/profile/:id')} component={Page_profile__id}/>
      </Router>
    </Profile>
  )
}

function _Navbar_Profile() {
  return (
    <Profile>
      <Router>
        <Route routes={routes} route={routes['/profile']} path={pathHandler('/profile')} component={Page_profile}/>
      </Router>
    </Profile>
  )
}

if (typeof window !== 'undefined') {
  render(<Client/>, document.getElementById('app') as HTMLElement)
}
